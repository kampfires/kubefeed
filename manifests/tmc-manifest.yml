
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: extension-manager
    tmc-extension: "true"
    controller-tools.k8s.io: "1.0"
  name: vmware-system-tmc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: stack-config
  namespace: vmware-system-tmc
data:
  agent_rid: "rid:ag:70b6aa10-ac09-484d-a39c-aae96857423e:global:opsdev-gkeuscen1:agent-opsdev-gkeuscen1"
  cluster_rid: "rid:c:70b6aa10-ac09-484d-a39c-aae96857423e:global:opsdev-gkeuscen1"
  cluster_name: "opsdev-gkeuscen1"
  cluster_location: global
  tmc_url: https://artfewellsorganization.tmc.cloud.vmware.com
  tmc_host: artfewellsorganization.tmc.cloud.vmware.com
  authenticator_url: https://auth.svcs.whitesand.tmc.cloud.vmware.com
  tls.crt: |+
    -----BEGIN CERTIFICATE-----
    MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/
    MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT
    DkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow
    PzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD
    Ew5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB
    AN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmTrE4O
    rz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq
    OLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b
    xiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+/yUFw
    7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD
    aeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
    HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqG
    SIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69
    ikugdB/OEIKcdBodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr
    AvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz
    R8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5
    JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo
    Ob8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ
    -----END CERTIFICATE-----

    -----BEGIN CERTIFICATE-----
    MIIDxTCCAq2gAwIBAgIQAqxcJmoLQJuPC3nyrkYldzANBgkqhkiG9w0BAQUFADBs
    MQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3
    d3cuZGlnaWNlcnQuY29tMSswKQYDVQQDEyJEaWdpQ2VydCBIaWdoIEFzc3VyYW5j
    ZSBFViBSb290IENBMB4XDTA2MTExMDAwMDAwMFoXDTMxMTExMDAwMDAwMFowbDEL
    MAkGA1UEBhMCVVMxFTATBgNVBAoTDERpZ2lDZXJ0IEluYzEZMBcGA1UECxMQd3d3
    LmRpZ2ljZXJ0LmNvbTErMCkGA1UEAxMiRGlnaUNlcnQgSGlnaCBBc3N1cmFuY2Ug
    RVYgUm9vdCBDQTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMbM5XPm
    +9S75S0tMqbf5YE/yc0lSbZxKsPVlDRnogocsF9ppkCxxLeyj9CYpKlBWTrT3JTW
    PNt0OKRKzE0lgvdKpVMSOO7zSW1xkX5jtqumX8OkhPhPYlG++MXs2ziS4wblCJEM
    xChBVfvLWokVfnHoNb9Ncgk9vjo4UFt3MRuNs8ckRZqnrG0AFFoEt7oT61EKmEFB
    Ik5lYYeBQVCmeVyJ3hlKV9Uu5l0cUyx+mM0aBhakaHPQNAQTXKFx01p8VdteZOE3
    hzBWBOURtCmAEvF5OYiiAhF8J2a3iLd48soKqDirCmTCv2ZdlYTBoSUeh10aUAsg
    EsxBu24LUTi4S8sCAwEAAaNjMGEwDgYDVR0PAQH/BAQDAgGGMA8GA1UdEwEB/wQF
    MAMBAf8wHQYDVR0OBBYEFLE+w2kD+L9HAdSYJhoIAu9jZCvDMB8GA1UdIwQYMBaA
    FLE+w2kD+L9HAdSYJhoIAu9jZCvDMA0GCSqGSIb3DQEBBQUAA4IBAQAcGgaX3Nec
    nzyIZgYIVyHbIUf4KmeqvxgydkAQV8GK83rZEWWONfqe/EW1ntlMMUu4kehDLI6z
    eM7b41N5cdblIZQB2lWHmiRk9opmzN6cN82oNLFpmyPInngiK3BD41VHMWEZ71jF
    hS9OMPagMRYjyOfiZRYzy78aG6A9+MpeizGLYAiJLQwGXFK3xPkKmNEVX58Svnw2
    Yzi9RKR/5CYrCsSXaQ3pjOLAEFe4yHYSkVXySGnYvCoCWw9E1CAx2/S6cCZdkGCe
    vEsXCS+0yx5DaMkHJ8HSXPfqIbloEpw8nL+e/IBcm2PN7EeqJSdnoDfzAIJ9VNep
    +OkuE6N36B9K
    -----END CERTIFICATE-----
---
apiVersion: v1
kind: Secret
metadata:
  name: tmc-client-secret
  namespace: vmware-system-tmc
type: Opaque
data:
 client_credentials : "eyJDbGllbnRJRCI6IjAxRTM3MTQxSERXQ0c1WVFDQk42S0JGR0FKIiwiQ2xpZW50U2VjcmV0IjoiNTh1OFVHTEFiSmM2dFNKQUo4RnV6dUJOdXVhT0E2VFA0WkR3ckV0RGZJd0pySWRCT2UiLCJPcmdJZCI6IjcwYjZhYTEwLWFjMDktNDg0ZC1hMzljLWFhZTk2ODU3NDIzZSJ9"
---
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: agents.clusters.tmc.cloud.vmware.com
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
    tmc.cloud.vmware.com/do-not-delete: "true"
spec:
  group: clusters.tmc.cloud.vmware.com
  names:
    kind: Agent
    plural: agents
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            extensions:
              items:
                type: string
              type: array
            namespace:
              type: string
          type: object
        status:
          properties:
            deploymentLink:
              type: string
            extensions:
              items:
                type: string
              type: array
            metadata:
              properties:
                cloudProvider:
                  format: int32
                  type: integer
                kubeServerVersion:
                  type: string
                lastUpdate:
                  properties:
                    nanos:
                      description: Non-negative fractions of a second at nanosecond
                        resolution. Negative second values with fractions must still
                        have non-negative nanos values that count forward in time.
                        Must be from 0 to 999,999,999 inclusive.
                      format: int32
                      type: integer
                    seconds:
                      description: Represents seconds of UTC time since Unix epoch
                        1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                        9999-12-31T23:59:59Z inclusive.
                      format: int64
                      type: integer
                  type: object
                masterNodeCount:
                  format: int64
                  type: integer
                namespacesCount:
                  format: int64
                  type: integer
                physicalMemory:
                  format: int64
                  type: integer
                podCount:
                  format: int64
                  type: integer
                region:
                  type: string
                vcpuCount:
                  format: int64
                  type: integer
                workerNodeCount:
                  format: int64
                  type: integer
              type: object
            status:
              format: int32
              type: integer
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
  name: extensions.clusters.tmc.cloud.vmware.com
  annotations:
      tmc.cloud.vmware.com/orphan-resource: "true"
      tmc.cloud.vmware.com/do-not-delete: "true"
spec:
  group: clusters.tmc.cloud.vmware.com
  names:
    kind: Extension
    plural: extensions
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            deploymentStrategy:
              description: Deployment strategy of an extension.
              properties:
                extensionLifecycleOwner:
                  description: Component Owning Deployment Strategy of the Extension.
                    In case this field is empty it is assumed that Owner of Deployment
                    Strategy is Extension Manager
                  type: string
                overlapTimePeriod:
                  description: Time-Period within which an extension maybe rolled-back
                    to previous version in case the extension becomes unhealthy after
                    the new version is updated successfully. After this time-period
                    elapses, Extensions will not be rolled back to previous versions
                    if they become unhealthy. If the value is zero this field will
                    not be used during Extension Lifecycle Management.
                  format: int64
                  type: integer
                processingTimeout:
                  description: Timeout Value for Processing(Creating/Updating/Deleting/RollingBack)
                    an Extension.
                  format: int64
                  type: integer
                type:
                  description: Type of deployment for extension resource.
                  type: string
              required:
              - type
              type: object
            description:
              type: string
            name:
              type: string
            objects:
              description: Raw JSON/YAML of extension  equivalent to kubernetes 'Unstructured'
                type.
              type: string
            version:
              type: string
          required:
          - version
          - name
          - objects
          - deploymentStrategy
          type: object
        status:
          properties:
            health:
              format: int32
              type: integer
            previousVersion:
              type: string
            state:
              format: int32
              type: integer
            status:
              format: int32
              type: integer
            version:
              type: string
          type: object
  version: v1alpha1
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
 name: extension-manager
 namespace: vmware-system-tmc
 annotations:
   tmc.cloud.vmware.com/orphan-resource: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: extension-manager-role
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ['*']
  verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: extension-manager-rolebinding
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: extension-manager-role
subjects:
- kind: ServiceAccount
  name: extension-manager
  namespace: vmware-system-tmc
---
apiVersion: v1
kind: Service
metadata:
  name: extension-manager-service
  namespace: vmware-system-tmc
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    control-plane: extension-manager
    tmc-extension: "true"
    controller-tools.k8s.io: "1.0"
spec:
  selector:
    control-plane: extension-manager
    tmc-extension: "true"
    controller-tools.k8s.io: "1.0"
  ports:
  - port: 443
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: extension-manager
  namespace: vmware-system-tmc
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    control-plane: extension-manager
    tmc-extension: "true"
    controller-tools.k8s.io: "1.0"
spec:
  progressDeadlineSeconds: 600
  minReadySeconds: 30
  replicas: 1
  selector:
    matchLabels:
      control-plane: extension-manager
      tmc-extension: "true"
      controller-tools.k8s.io: "1.0"
  strategy:
    rollingUpdate:
      maxSurge: 100%
  template:
    metadata:
      labels:
        control-plane: extension-manager
        tmc-extension: "true"
        controller-tools.k8s.io: "1.0"
    spec:
      tolerations:
        - operator: "Exists"
      serviceAccountName: extension-manager
      containers:
      - command:
        - /usr/local/bin/manager
        image: vmware-docker-olympus-extensions.bintray.io/extension-manager/extension-manager@sha256:fd3bbb5b5732101755f96f1d1751f163e9d5472d1fb0b989ed2b28a24c6a738b
        imagePullPolicy: Always
        securityContext:
          runAsUser: 10000
          runAsGroup: 1000
        name: extension-manager
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: extension-updater
  name: extension-updater-serviceaccount
  namespace: vmware-system-tmc
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: extension-updater
  name: extension-updater-clusterrole
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
rules:
- apiGroups: ["security.openshift.io"]
  resources:
  - securitycontextconstraints
  verbs:
  - use
  resourceNames:
  - nonroot
- apiGroups: ["clusters.tmc.cloud.vmware.com"]
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups: [""]
  verbs: ["create", "get", "list", "watch", "update"]
  resources:
  - "configmaps"
- apiGroups: [""]
  verbs: ["get", "list", "watch"]
  resources:
  - "namespaces"
  - "nodes"
  - "pods"
- apiGroups: ["apps"]
  resources:
  - "deployments"
  - "statefulsets"
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  verbs: ["*"]
  resources:
  - "secrets"
- apiGroups: [""]
  verbs:
  - create
  - patch
  - update
  resources:
  - "events"
- apiGroups: ["batch"]
  resources:
  - "cronjobs"
  - "jobs"
  verbs: ["create", "get", "list", "watch", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: extension-updater
  name: extension-updater-clusterrolebinding
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: extension-updater-clusterrole
subjects:
- kind: ServiceAccount
  name: extension-updater-serviceaccount
  namespace: vmware-system-tmc
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: extension-updater
  name: extension-updater
  namespace: vmware-system-tmc
spec:
  selector:
    app: extension-updater
    component: extension-updater
  ports:
    - protocol: TCP
      port: 9999
      targetPort: 9999
      name: validate
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: extension-updater
  name: extension-updater
  namespace: vmware-system-tmc
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
spec:
  progressDeadlineSeconds: 600
  minReadySeconds: 30
  replicas: 1
  selector:
    matchLabels:
      app: extension-updater
      component: extension-updater
  strategy:
    rollingUpdate:
      maxSurge: 100%
  template:
    metadata:
      labels:
        app: extension-updater
        component: extension-updater
    spec:
      tolerations:
      - operator: "Exists"
      serviceAccountName: extension-updater-serviceaccount
      containers:
      - args:
        - "--server=$(TMC_HOST):443"
        - "--server-name=$(TMC_HOST)"
        - "--client-credentials=/etc/tmc/client-credentials/client_credentials"
        - "--tmc-ca=/etc/tmc/ca.crt"
        - "--auth-server=$(AUTHENTICATOR_URL)"
        - "--namespace=$(POD_NAMESPACE)"
        - --cluster-id=$(CLUSTER_RESOURCE_ID)
        - --agent-id=$(AGENT_RESOURCE_ID)
        - "--unsafe-disable-authentication=false"
        - "--connect-timeout=100s"
        - "--poll-interval=5m"
        - "--poll-jitter=0.3"
        - "--agent-heart-beat-interval=90s"
        - "--validation-port=9999"
        env:
        - name: POD_NAMESPACE
          valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        - name: TMC_HOST
          valueFrom:
            configMapKeyRef:
              name: stack-config
              key: tmc_host
        - name: AUTHENTICATOR_URL
          valueFrom:
            configMapKeyRef:
              name: stack-config
              key: authenticator_url
        - name: CLUSTER_RESOURCE_ID
          valueFrom:
            configMapKeyRef:
              name: stack-config
              key: cluster_rid
        - name: AGENT_RESOURCE_ID
          valueFrom:
            configMapKeyRef:
              name: stack-config
              key: agent_rid
        resources:
          limits:
            cpu: 100m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 128Mi
        image:  vmware-docker-olympus-extensions.bintray.io/extension-updater/extension-updater@sha256:1181c13c504e838ccbe00312d6747a06da72e4453368ee9abf2eaf3f23687ab9
        imagePullPolicy: Always
        name: extension-updater
        securityContext:
          runAsUser: 10000
          runAsGroup: 1000
        volumeMounts:
        - name: tmc-root-ca
          mountPath: "/etc/tmc"
          readOnly: true
        - name: client-credentials
          mountPath: "/etc/tmc/client-credentials"
          readOnly: true
      volumes:
      - name: tmc-root-ca
        configMap:
          name: stack-config
          items:
          - key: tls.crt
            path: ca.crt
            path: ca.crt
      - name: client-credentials
        secret:
          secretName: tmc-client-secret
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: agent-updater
  name: agent-updater
  namespace: vmware-system-tmc
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: agent-updater
  creationTimestamp: null
  name: agent-updater-role
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ['*']
  verbs: ['*']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: agent-updater
  creationTimestamp: null
  name: agent-updater-rolebinding
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: agent-updater-role
subjects:
- kind: ServiceAccount
  name: agent-updater
  namespace: vmware-system-tmc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent-updater
  namespace: vmware-system-tmc
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
  labels:
    app: agent-updater
    tmc-extension: "true"
    tmc-extension-name: agent-updater
    component: agent-updater
spec:
  progressDeadlineSeconds: 600
  minReadySeconds: 30
  replicas: 1
  selector:
    matchLabels:
      tmc-extension: "true"
      tmc-extension-name: agent-updater
      component: agent-updater
  strategy:
    rollingUpdate:
      maxSurge: 100%
  template:
    metadata:
      labels:
        tmc-extension: "true"
        tmc-extension-name: agent-updater
        component: agent-updater
    spec:
      tolerations:
        - operator: "Exists"
      serviceAccountName: agent-updater
      containers:
      - command:
        - /usr/local/bin/manager
        image: vmware-docker-olympus-extensions.bintray.io/agent-updater/agent-updater@sha256:86bb3cbda5a0536a0d8256e63c6e5ca8999571f167af4154951bd3033dd741b9
        imagePullPolicy: Always
        securityContext:
          runAsUser: 10000
          runAsGroup: 1000
        name: agent-updater
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: 100m
            memory: 150Mi
          requests:
            cpu: 100m
            memory: 100Mi
        ports:
        - containerPort: 9876
          name: webhook-server
          protocol: TCP
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: agentupdater-workload
  namespace: vmware-system-tmc
  labels:
    app: agent-updater
    tmc-extension: "true"
    tmc-extension-name: agent-updater
    component: agentupdater-workload
  annotations:
    tmc.cloud.vmware.com/orphan-resource: "true"
spec:
  schedule: "*/1 * * * *"
  startingDeadlineSeconds: 180
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        tmc-extension-name: agent-updater
        component: agentupdater-workload
    spec:
      template:
        spec:
          tolerations:
            - operator: "Exists"
          serviceAccountName: agent-updater
          restartPolicy: Never
          containers:
          - command:
            - /usr/local/bin/agentupdaterworkload
            image: vmware-docker-olympus-extensions.bintray.io/agent-updater/agentupdater-workload@sha256:4cd181ccc33321e496ee626d469a1dcf05d2abc2e6759926509b04350c862b3d
            imagePullPolicy: IfNotPresent
            securityContext:
              runAsUser: 10000
              runAsGroup: 1000
            name: agentupdater-workload
            env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            resources:
              limits:
                cpu: 100m
                memory: 150Mi
              requests:
                cpu: 100m
                memory: 100Mi
            ports:
            - containerPort: 9876
              name: webhook-server
              protocol: TCP
---